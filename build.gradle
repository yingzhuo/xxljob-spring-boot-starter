//file:noinspection GroovyAssignabilityCheck

plugins {
	id 'java'
	id 'signing'
	id 'maven-publish'
	id 'io.spring.dependency-management'
}

group = 'com.github.yingzhuo'
version = '2.5.0-3'

dependencyManagement {
	imports {
		mavenBom 'org.springframework.boot:spring-boot-dependencies:3.4.3'
	}
}

dependencies {

	// spring-boot & spring
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.springframework.boot:spring-boot-autoconfigure'
	compileOnly 'org.springframework.boot:spring-boot-starter-aop'
	compileOnly 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.springframework.boot:spring-boot-starter-logging'
	compileOnly 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.springframework.boot:spring-boot-starter-jdbc'
	compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
	compileOnly 'org.springframework.boot:spring-boot-starter-data-redis'
	compileOnly 'org.springframework.boot:spring-boot-autoconfigure-processor'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// xxl-job-core
	implementation 'com.xuxueli:xxl-job-core:2.5.0'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// slf4j
	implementation 'org.slf4j:slf4j-api'
}

java {
	withJavadocJar()
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

javadoc {
	if (JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
	options.addBooleanOption('Xdoclint:none', true)
}

test {
	useJUnitPlatform()
}

processResources {
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			groupId = 'com.github.yingzhuo'
			artifactId = 'xxljob-spring-boot-starter'
			version = "${project.version}"

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}

			pom {
				name = "xxljob-spring-boot-starter"
				description = 'spring-boot starter for xxl-job'
				url = 'https://github.com/yingzhuo/xxljob-spring-boot-starter'
				inceptionYear = '2025'

				licenses {
					license {
						name = 'Apache License, Version 2.0'
						url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'yingzhuo'
						name = '应卓'
						email = 'yingzhor@gmail.com'
					}
				}
				scm {
					url = 'git@github.com:yingzhuo/xxljob-spring-boot-starter.git'
					connection = 'scm:git:git@github.com:yingzhuo/xxljob-spring-boot-starter.git'
					developerConnection = 'scm:git:git@github.com:yingzhuo/xxljob-spring-boot-starter.git'
				}
			}
		}
	}

	repositories {
		maven {
			name = 'OSSRH'

			def releaseUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
			url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl

			credentials {
				username = getProperty('ossrh.token.username')
				password = getProperty('ossrh.token.password')
			}
		}
	}
}

signing {
	useGpgCmd()
	sign publishing.publications.mavenJava
}

tasks.withType(GenerateModuleMetadata).configureEach {
	enabled = false
}
